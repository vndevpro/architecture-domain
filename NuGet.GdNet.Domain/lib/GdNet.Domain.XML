<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GdNet.Domain</name>
    </assembly>
    <members>
        <member name="M:GdNet.Domain.Entity.EditableEntityBaseT`1.#ctor">
            <summary>
            Entity does not support state. It will be empty.
            Entity's availability (IsAvailable) is false by default.
            </summary>
        </member>
        <member name="T:GdNet.Domain.Entity.Impl.DefaultStateStrategy">
            <summary>
            This strategy always accepts state changing, only requires different bitween old state and new state
            </summary>
        </member>
        <member name="M:GdNet.Domain.Entity.EditableEntityBase.#ctor">
            <summary>
            Entity does not support state. It will be empty.
            Entity's availability (IsAvailable) is false by default.
            </summary>
        </member>
        <member name="T:GdNet.Domain.Entity.Impl.EntityNotAvailableByDefaultStrategy">
            <summary>
            This strategy will set IsAvailable to false
            </summary>
        </member>
        <member name="T:GdNet.Domain.Exceptions.EntityNotFoundException`1">
            <summary>
            Use this exception when getting an entity from system and it is not existing
            </summary>
            <typeparam name="TId"></typeparam>
        </member>
        <member name="P:GdNet.Domain.Exceptions.EntityNotFoundException`1.EntityId">
            <summary>
            Id of then entity
            </summary>
        </member>
        <member name="T:GdNet.Domain.Repository.RepositoryBase`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
    </members>
</doc>
